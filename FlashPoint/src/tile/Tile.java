package tile;

import java.util.ArrayList;

import edge.Edge;
import token.Firefighter;
import token.POI;
import game.GameState;

/**
 * Tile class definition.
 * Generated by the TouchCORE code generator.
 * modified by @matekrk
 */
public class Tile{
    
    protected int fire;
    protected int[] coords;
    protected boolean interior;
    protected Edge[] adjacentEdges;
    protected ArrayList<Firefighter> listOfFirefighters;
    protected int x;
    protected int y;
    protected ArrayList<POI> poiList;
    
    public Tile(boolean isParkingspot, int[] coords) {
        /* TODO: No message view defined */
    }

    /*
     * GETTERS
     */
    
    public int getFire() {
        return fire;
    }

    public boolean containsFirefighter() {
        /* TODO: No message view defined */
        return !(listOfFirefighters.isEmpty());
    }

    public boolean containsPOI() {
        /* TODO: No message view defined */
    	return !(poiList.isEmpty());
    }

    public ArrayList<POI> getPoiList() {
        return poiList;
    }

    public ArrayList<Firefighter> getFirefighterList() {
        return listOfFirefighters;
    }
    
    public int[] getCoords() {
        return new int[] {x,y};
    }

    public boolean getInterior() {
    	return interior;
    }
    
    //left: 0, top: 1, right: 2, down: 3
    public Edge getEdge(int direction) {
    	return adjacentEdges[direction];
    }
    
    public int getX() {
    	return x;
    }
    
    public int getY() {
    	return y;
    }
    
    /*
     * SETTERS
     */
    
    public void setFire(int amount) {
    	if (amount <= 2 && amount >=0) {
    		fire = amount;
    	}
    }

    public void setPOIList(ArrayList<POI> poiList) {
    	this.poiList = poiList;
    }
    
    public void addPoi(POI newPoi) {
        poiList.add(newPoi);
    }

    public void removeFromFirefighterList(Firefighter target) {
        listOfFirefighters.remove(target);
    }
    
    public void addToFirefighterList(Firefighter target) {
    	listOfFirefighters.add(target);
    }

    public void setCoords(int[] coords) {
        x = coords[0];
        y = coords[1];
    }
    
    /*
     * some algos/methods
     */
    

    public boolean checkBarriers(int direction) {
        /* TODO: No message view defined */
        return false;
    }

    //good shit!
    public ParkingSpot getNearestAmbulance() {
        /* TODO: No message view defined */
        return null;
    }


    public void removeFromPoiList(POI target) {
        poiList.remove(target);
    }

}
